import React, { useEffect, useState } from 'react';
import Header from './Header';
import './ReportVulnerability.css';

const ReportVulnerability = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    severity: 'medium',
    category: 'other',
    title: '',
    description: '',
    stepsToReproduce: '',
    impact: '',
    attachments: null
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  useEffect(() => { 
    window.scrollTo(0, 0); 
  }, []);

  const handleInputChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleFileChange = (e) => {
    setFormData(prev => ({ ...prev, attachments: e.target.files }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false);
      setShowSuccess(true);
      // Reset form
      setFormData({
        name: '',
        email: '',
        severity: 'medium',
        category: 'other',
        title: '',
        description: '',
        stepsToReproduce: '',
        impact: '',
        attachments: null
      });
      // Hide success message after 5 seconds
      setTimeout(() => setShowSuccess(false), 5000);
    }, 2000);
  };

  return (
    <div className="vulnerability-page">
      <Header />
      <main className="vulnerability-main">
        {/* Hero Section */}
        <section className="vulnerability-hero">
          <div className="container">
            <div className="hero-content">
              <div className="hero-icon">üõ°Ô∏è</div>
              <h1>Report a Security Vulnerability</h1>
              <p>Help us keep FlickXir secure by reporting potential security issues</p>
              <div className="hero-badges">
                <span className="badge">Responsible Disclosure</span>
                <span className="badge">24/7 Security Team</span>
                <span className="badge">Fast Response</span>
              </div>
            </div>
          </div>
        </section>

        {/* Success Message */}
        {showSuccess && (
          <div className="success-banner">
            <div className="container">
              <div className="success-content">
                <span className="success-icon">‚úÖ</span>
                <div>
                  <h3>Report Submitted Successfully!</h3>
                  <p>Thank you for helping us improve security. Our team will review your report and respond within 24-48 hours.</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Main Content */}
        <section className="vulnerability-content">
          <div className="container">
            <div className="content-layout">
              
              {/* Report Form */}
              <div className="report-form-section">
                <div className="form-header">
                  <h2>Submit Vulnerability Report</h2>
                  <p>Please provide as much detail as possible to help us understand and address the issue quickly.</p>
                </div>

                <form onSubmit={handleSubmit} className="vulnerability-form">
                  {/* Personal Information */}
                  <div className="form-section">
                    <h3>Contact Information</h3>
                    <div className="form-row">
                      <div className="form-group">
                        <label htmlFor="name">Full Name *</label>
                        <input
                          type="text"
                          id="name"
                          value={formData.name}
                          onChange={(e) => handleInputChange('name', e.target.value)}
                          placeholder="Enter your full name"
                          required
                        />
                      </div>
                      <div className="form-group">
                        <label htmlFor="email">Email Address *</label>
                        <input
                          type="email"
                          id="email"
                          value={formData.email}
                          onChange={(e) => handleInputChange('email', e.target.value)}
                          placeholder="your.email@example.com"
                          required
                        />
                      </div>
                    </div>
                  </div>

                  {/* Vulnerability Details */}
                  <div className="form-section">
                    <h3>Vulnerability Details</h3>
                    <div className="form-row">
                      <div className="form-group">
                        <label htmlFor="severity">Severity Level *</label>
                        <select
                          id="severity"
                          value={formData.severity}
                          onChange={(e) => handleInputChange('severity', e.target.value)}
                          required
                        >
                          <option value="low">Low - Minor security concern</option>
                          <option value="medium">Medium - Moderate security risk</option>
                          <option value="high">High - Significant security risk</option>
                          <option value="critical">Critical - Immediate security threat</option>
                        </select>
                      </div>
                      <div className="form-group">
                        <label htmlFor="category">Category *</label>
                        <select
                          id="category"
                          value={formData.category}
                          onChange={(e) => handleInputChange('category', e.target.value)}
                          required
                        >
                          <option value="xss">Cross-Site Scripting (XSS)</option>
                          <option value="sql-injection">SQL Injection</option>
                          <option value="csrf">Cross-Site Request Forgery (CSRF)</option>
                          <option value="authentication">Authentication Issues</option>
                          <option value="authorization">Authorization Problems</option>
                          <option value="data-exposure">Data Exposure</option>
                          <option value="dos">Denial of Service</option>
                          <option value="other">Other Security Issue</option>
                        </select>
                      </div>
                    </div>

                    <div className="form-group">
                      <label htmlFor="title">Vulnerability Title *</label>
                      <input
                        type="text"
                        id="title"
                        value={formData.title}
                        onChange={(e) => handleInputChange('title', e.target.value)}
                        placeholder="Brief, descriptive title of the vulnerability"
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="description">Detailed Description *</label>
                      <textarea
                        id="description"
                        value={formData.description}
                        onChange={(e) => handleInputChange('description', e.target.value)}
                        placeholder="Provide a detailed description of the vulnerability, including technical details..."
                        rows="5"
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="stepsToReproduce">Steps to Reproduce *</label>
                      <textarea
                        id="stepsToReproduce"
                        value={formData.stepsToReproduce}
                        onChange={(e) => handleInputChange('stepsToReproduce', e.target.value)}
                        placeholder="1. Go to [URL]&#10;2. Click on [button/link]&#10;3. Enter [specific input]&#10;4. Observe [unexpected behavior]"
                        rows="4"
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="impact">Potential Impact *</label>
                      <textarea
                        id="impact"
                        value={formData.impact}
                        onChange={(e) => handleInputChange('impact', e.target.value)}
                        placeholder="Describe the potential impact of this vulnerability (data breach, unauthorized access, etc.)"
                        rows="3"
                        required
                      />
                    </div>

                    <div className="form-group">
                      <label htmlFor="attachments">Supporting Files (Optional)</label>
                      <input
                        type="file"
                        id="attachments"
                        onChange={handleFileChange}
                        multiple
                        accept=".jpg,.jpeg,.png,.gif,.pdf,.txt,.zip"
                        className="file-input"
                      />
                      <div className="file-help">
                        Screenshots, proof-of-concept files, or other supporting documentation (Max 10MB per file)
                      </div>
                    </div>
                  </div>

                  <div className="form-actions">
                    <button 
                      type="submit" 
                      className="submit-btn"
                      disabled={isSubmitting}
                    >
                      {isSubmitting ? (
                        <>
                          <span className="spinner"></span>
                          Submitting Report...
                        </>
                      ) : (
                        'Submit Vulnerability Report'
                      )}
                    </button>
                  </div>
                </form>
              </div>

              {/* Sidebar Information */}
              <div className="sidebar">
                
                {/* Security Policy */}
                <div className="info-card">
                  <div className="card-icon">üìã</div>
                  <h3>Security Policy</h3>
                  <ul>
                    <li>We follow responsible disclosure practices</li>
                    <li>Reports are reviewed within 24-48 hours</li>
                    <li>We provide regular updates on progress</li>
                    <li>Credit is given for valid reports (if desired)</li>
                  </ul>
                </div>

                {/* Response Timeline */}
                <div className="info-card">
                  <div className="card-icon">‚è±Ô∏è</div>
                  <h3>Response Timeline</h3>
                  <div className="timeline">
                    <div className="timeline-item">
                      <span className="time">24-48h</span>
                      <span className="action">Initial Response</span>
                    </div>
                    <div className="timeline-item">
                      <span className="time">1-7 days</span>
                      <span className="action">Investigation</span>
                    </div>
                    <div className="timeline-item">
                      <span className="time">7-30 days</span>
                      <span className="action">Resolution</span>
                    </div>
                  </div>
                </div>

                {/* Severity Guidelines */}
                <div className="info-card">
                  <div className="card-icon">üéØ</div>
                  <h3>Severity Guidelines</h3>
                  <div className="severity-guide">
                    <div className="severity-item critical">
                      <span className="severity-label">Critical</span>
                      <span className="severity-desc">Remote code execution, data breach</span>
                    </div>
                    <div className="severity-item high">
                      <span className="severity-label">High</span>
                      <span className="severity-desc">Privilege escalation, authentication bypass</span>
                    </div>
                    <div className="severity-item medium">
                      <span className="severity-label">Medium</span>
                      <span className="severity-desc">XSS, CSRF, information disclosure</span>
                    </div>
                    <div className="severity-item low">
                      <span className="severity-label">Low</span>
                      <span className="severity-desc">Minor information leaks, UI issues</span>
                    </div>
                  </div>
                </div>

                {/* Contact Information */}
                <div className="info-card">
                  <div className="card-icon">üìß</div>
                  <h3>Alternative Contact</h3>
                  <p>For urgent security issues, you can also reach us at:</p>
                  <a href="mailto:security@flickxir.com" className="contact-email">
                    security@flickxir.com
                  </a>
                  <p className="contact-note">Please use this form for non-urgent reports to ensure proper tracking.</p>
                </div>

              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
};

export default ReportVulnerability;


